# -*- coding: utf-8 -*-
"""Lambda Data Science Assignment 5 - Linear Algebra Foundations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1900UlYrPlQonG0HSlqDfBmwpryVKLijj

#Intro to Data Science Assignment 5
##Linear Algebra Foundations

For the short answers:
     Feel free to do any additional research, but try your best to answer the questions in your own words (don't copy/paste).
     
For the computations by hand:
      If you'd like to use LaTex to make things pretty, by all means give it a try, but it is *optional*. You can answer the questions using algebraic-like notation. For instance if I was adding two vectors:
      
[1,2] + [2,3] => (1+2), (2+3) => [3,5] 

**Show your work, not just the answer**

For the graphs:
   Make them as pretty as you like
   
 For using the tools (numpy):
    Use labeled print statements as shown

#Short Answer Questions

1) Describe a vector

2) Describe a matrix

3) What can we do with vectors?

4) What are basis vectors?

5) What is an inverse matrix?

6) What is the transpose of a matrix?

##Your Answers go here:

1) A vector is an object that has both a direction and a magnitude. Vectors can hold any object (e.g a sequence of values)

2) A matrix can be thought of as a collection of vector or a list of lists

3) We can add, multiply and plot vectors graphically

4) Basis vectors can be thought of as linear lines that when scaled arbitrarily can create vectors going in any direction

5) Inverse Matrix can be thought of as the reversed value of the original matrix. if both the inverse and the original values are multiplied this gives us the identity matrix

6) When a new matrix is formed by turning all the rows of the original matrix into columns or turning the columns to rows

#Computations by hand

1) $ \begin {bmatrix} 1 \\ 3 \\ 4 \end {bmatrix} + \begin {bmatrix} 4 \\ 2 \\ 6 \end {bmatrix} $

2) $ 5 \begin {bmatrix} 1 \\ 2 \\ 3 \end{bmatrix} $

3) $ \begin {bmatrix} 1  &  3\\ 2 & 3  \end{bmatrix} \begin {bmatrix} 1 \\ 2 \end{bmatrix} $

4) $ \begin {bmatrix} 1  &  3\\ 2 & 3 \end{bmatrix} \begin {bmatrix} 2 & 2 \\ 3 & 1 \end{bmatrix} $

5) What is the transpose of :

$ \begin{bmatrix} 1 & 4 \\ 2 & 5 \\ 3 & 6 \end{bmatrix} $ 

6) What is the determinant of:

 $\begin {bmatrix} 2 & 2 \\ 3 & 1 \end{bmatrix}$
 
 7) What is the inverse matrix of: 
 
  $\begin {bmatrix} 3 & 2 \\ 1 & 2 \end{bmatrix}$
"""

(2*2)-(2*1)

"""## Your Answers go here:

1) $ \begin {bmatrix} 5 \\ 5 \\ 10 \end {bmatrix} $

2) $ \begin {bmatrix} 5 \\ 10 \\ 15 \end {bmatrix} $

3) $\begin {bmatrix} 7 \\ 9 \end{bmatrix}$

4) $\begin {bmatrix} 11 & 5 \\ 13 & 7 \end{bmatrix}$

5) $ \begin{bmatrix} 1 & 2 & 3  \\ 4 & 5 & 6  \end{bmatrix} $

6) 2

7) $\begin {bmatrix} 0.5 & -0.5 \\ -0.25 & 0.75 \end{bmatrix}$

##Visualize the Vectors

Graph the following:

  Vector v_1 = [1,0] 
  
  Vector v_2 = v_1 scaled by 2
  
  Vector v_3 = [0,-1]
  
  Vector v_4 = the sum of v_2 and v_3
"""

import matplotlib.pyplot as plt
plt.axis([-2,3,-2,3])
plt.arrow(0, 0, 1, 0, head_width = .02, head_length =0.01, color = 'b')
plt.arrow(0, 0, 2, 0, head_width = .02, head_length =0.01, color = 'r')
plt.arrow(0, 0, 0, -1, head_width = .02, head_length =0.01, color = 'y')
plt.arrow(0, 0, 2, -1, head_width = .02, head_length =0.01, color = 'g')
plt.title('Assignment 4 vectors')
plt.show()

"""## Graph the Matrix

Graph the columns and rows of this matrix: 
 $\begin {bmatrix} 2 & 2 \\ 3 & 1 \end{bmatrix}$
"""

plt.axis([0,6,0,6])
plt.arrow(0,0,2,3, head_width = .1, head_length=.05)
plt.arrow(0,0,2,1, head_width = .1, head_length=.05)
plt.fill([0,0,2,2],[0,0,1,3], color='blue')

"""## Using the tools: NumPy Edition

Use the NumPy library to compute the "Computations by Hand" section. Make sure to print each answer and label your print statement
"""

from operator import add, mul
import numpy as np

#Question 1
one, two = [1,2,3], [4,2,6]
print('Question one=', list(map(add, one,two)))

#Question 2
scaler = 5
list_one =[1,2,3]
print('Question two=', [x*scaler for x in list_one])

#Question 3
matrix_1 = np.matrix('1 3; 3,3')
vector_1 = np.array([1,2])
print('Question three=', matrix_1.dot(vector_1))

#Question 4
matrix_two, matrix_three = np.matrix('1 3; 2 3'), np.matrix('2 2;3 1')
print('Question four=', np.matmul(matrix_two, matrix_three))

#Question 5
matrix_four = np.matrix('1 4; 2 5; 3 6')
print('Question five=', np.transpose(matrix_four))

#Question 6
matrix_five = np.matrix('3 2; 1 2')
print('Question six=', np.linalg.det(matrix_five))

#Question 7
matrix_six = np.matrix('3 2; 1 2')
print('Question seven=', np.linalg.inv(matrix_six))
